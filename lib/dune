(library
 (name common)
 (modules common))

(library
 (name lexical)
 (modules lexical)
 (preprocess
  (pps ppx_sexp_conv))
 (libraries sexplib))

(ocamllex lexer)

(library
 (name lexer)
 (modules lexer)
 (libraries lexical))

(library
 (name syntactics)
 (modules syntactics)
 (preprocess
  (pps ppx_sexp_conv))
 (libraries common lexical sexplib))

(library
 (name error_messages)
 (modules error_messages))

(library
 (name parse)
 (modules parse)
 (libraries error_messages parser menhirLib lexer))

(menhir
 (modules parser)
 (flags --dump --external-tokens=Lexical.Token --table)
 (infer true))

(library
 (name parser)
 (modules parser)
 (libraries common lexical syntactics menhirLib))

(library
 (name typing)
 (modules typing)
 (preprocess
  (pps ppx_sexp_conv))
 (libraries common sexplib))

(library
 (name semantics)
 (modules semantics)
 (preprocess
  (pps ppx_sexp_conv))
 (libraries common syntactics typing concrete sexplib))

(library
 (name concrete)
 (modules concrete)
 (preprocess
  (pps ppx_sexp_conv))
 (libraries common typing sexplib))

(library
 (name immediate)
 (modules immediate)
 (libraries common))
